[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lutak\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lutak\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_241)
[debug]       Load.loadUnit: plugins took 110.6659ms
[debug]       Load.loadUnit: defsScala took 0.3999ms
[debug] [Loading] Scanning directory C:\Users\lutak\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lutak\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.7454 ms
[debug]           Load.resolveProject(global-plugins) took 61.2943ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lutak\.sbt\1.0\plugins, plugins: List(<none>))) took 121.6621ms
[debug] [Loading] Done in C:\Users\lutak\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 147.6971ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.347ms
[debug]     Load.loadUnit(file:/C:/Users/lutak/.sbt/1.0/plugins/, ...) took 269.6337ms
[debug]   Load.apply: load took 461.1418ms
[debug]   Load.apply: resolveProjects took 7.3598ms
[debug]   Load.apply: finalTransforms took 77.1706ms
[debug]   Load.apply: config.delegates took 13.3942ms
[debug]   Load.apply: Def.make(settings)... took 531.8513ms
[debug]   Load.apply: structureIndex took 137.6838ms
[debug]   Load.apply: mkStreams took 2.8053ms
[info] loading global plugins from C:\Users\lutak\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12019.7213ms
[debug]           Load.loadUnit: plugins took 52.8249ms
[debug]           Load.loadUnit: defsScala took 0.0064ms
[debug] [Loading] Scanning directory C:\Users\lutak\IdeaProjects\school-de-2\project
[debug]             Load.loadUnit: mkEval took 11.9997ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lutak\IdeaProjects\school-de-2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0356 ms
[info] loading settings for project school-de-2-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(school-de-2-build) took 4.9601ms
[debug]             Load.loadTransitive: finalizeProject(Project(id school-de-2-build, base: C:\Users\lutak\IdeaProjects\school-de-2\project, plugins: List(<none>))) took 8.9541ms
[debug] [Loading] Done in C:\Users\lutak\IdeaProjects\school-de-2\project, returning: (school-de-2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3759.3491ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.1732ms
[debug]         Load.loadUnit(file:/C:/Users/lutak/IdeaProjects/school-de-2/project/, ...) took 3825.2532ms
[debug]       Load.apply: load took 3828.1315ms
[debug]       Load.apply: resolveProjects took 0.2179ms
[debug]       Load.apply: finalTransforms took 12.6981ms
[debug]       Load.apply: config.delegates took 0.5289ms
[debug]       Load.apply: Def.make(settings)... took 91.7627ms
[debug]       Load.apply: structureIndex took 32.367ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\Users\lutak\IdeaProjects\school-de-2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6532.0726ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\lutak\IdeaProjects\school-de-2
[debug]       Load.loadUnit: mkEval took 0.3523ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lutak\IdeaProjects\school-de-2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7777 ms
[info] loading settings for project school-de-2 from build.sbt ...
[debug]         Load.resolveProject(school-de-2) took 45.0545ms
[debug]       Load.loadTransitive: finalizeProject(Project(id school-de-2, base: C:\Users\lutak\IdeaProjects\school-de-2, plugins: List(<none>))) took 49.7703ms
[debug] [Loading] Done in C:\Users\lutak\IdeaProjects\school-de-2, returning: (school-de-2)
[debug]     Load.loadUnit: loadedProjectsRaw took 3614.1679ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.7741ms
[debug]   Load.loadUnit(file:/C:/Users/lutak/IdeaProjects/school-de-2/, ...) took 10170.2992ms
[debug] Load.apply: load took 10172.8395ms
[debug] Load.apply: resolveProjects took 0.1217ms
[debug] Load.apply: finalTransforms took 108.6487ms
[debug] Load.apply: config.delegates took 0.5091ms
[debug] Load.apply: Def.make(settings)... took 91.6441ms
[debug] Load.apply: structureIndex took 40.1865ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to demo_scala_project (in build file:/C:/Users/lutak/IdeaProjects/school-de-2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 10813 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 10813, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to demo_scala_project (in build file:/C:/Users/lutak/IdeaProjects/school-de-2/)
[debug] > Exec(idea-shell, None, None)
